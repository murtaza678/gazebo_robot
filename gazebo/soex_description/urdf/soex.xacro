<?xml version="1.0"?>
<robot name="soex" xmlns:xacro="http://www.ros.org/wiki/xacro">
       <!-- Put here the robot description -->
       <xacro:property name="PI" value="3.1415926535897931"/>

<xacro:property name="chassisHeight" value="0.1"/>
<xacro:property name="chassisLength" value="0.4"/>
<xacro:property name="chassisWidth" value="0.2"/>
<xacro:property name="chassisMass" value="50"/>

<xacro:property name="casterRadius" value="0.05"/>
<xacro:property name="casterMass" value="5"/>

<xacro:property name="wheelWidth" value="0.05"/>
<xacro:property name="wheelRadius" value="0.1"/>
<xacro:property name="wheelPos" value="0.2"/>
<xacro:property name="wheelMass" value="5"/>

<xacro:property name="cameraSize" value="0.05"/>
<xacro:property name="cameraMass" value="0.1"/>

<link name="footprint" />

<joint name="base_joint" type="fixed">
 <parent link="footprint"/>
 <child link="chassis"/>
</joint>

<link name='chassis'>
 <collision>
   <origin xyz="0 0 ${wheelRadius}" rpy="0 0 0"/>
   <geometry>
     <box size="${chassisLength} ${chassisWidth} ${chassisHeight}"/>
   </geometry>
 </collision>
 <visual>
   <origin xyz="0 0 ${wheelRadius}" rpy="0 0 0"/>
   <geometry>
     <box size="${chassisLength} ${chassisWidth} ${chassisHeight}"/>
   </geometry>
   <material name="orange"/>
 </visual>
 <inertial>
   <origin xyz="0 0 ${wheelRadius}" rpy="0 0 0"/>
   <mass value="${chassisMass}"/>
   <box_inertia m="${chassisMass}" x="${chassisLength}" y="${chassisWidth}" z="${chassisHeight}"/>
 </inertial>
</link>

<joint name="fixed" type="fixed">
 <parent link="chassis"/>
 <child link="caster_wheel"/>
</joint>

<link name="caster_wheel">
 <collision>
   <origin xyz="${casterRadius-chassisLength/2} 0 ${casterRadius-chassisHeight+wheelRadius}" rpy="0 0 0"/>
   <geometry>
     <sphere radius="${casterRadius}"/>
   </geometry>
 </collision>
  <visual>
   <origin xyz="${casterRadius-chassisLength/2} 0 ${casterRadius-chassisHeight+wheelRadius}" rpy="0 0 0"/>
   <geometry>
     <sphere radius="${casterRadius}"/>
   </geometry>
   <material name="red"/>
 </visual>

 <inertial>
   <origin xyz="${casterRadius-chassisLength/2} 0 ${casterRadius-chassisHeight+wheelRadius}" rpy="0 0 0"/>
   <mass value="${casterMass}"/>
   <sphere_inertia m="${casterMass}" r="${casterRadius}"/>
 </inertial>
</link>

<gazebo reference="caster_wheel">
 <mu1>0.0</mu1>
 <mu2>0.0</mu2>
 <material>Gazebo/Red</material>
</gazebo>

<macro name="cylinder_inertia" params="m r h">
 <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
   iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
   izz="${m*r*r/2}"
 />
</macro>

<macro name="box_inertia" params="m x y z">
 <inertia  ixx="${m*(y*y+z*z)/12}" ixy = "0" ixz = "0"
   iyy="${m*(x*x+z*z)/12}" iyz = "0"
   izz="${m*(x*x+z*z)/12}"
 />
</macro>

<macro name="sphere_inertia" params="m r">
 <inertia  ixx="${2*m*r*r/5}" ixy = "0" ixz = "0"
   iyy="${2*m*r*r/5}" iyz = "0"
   izz="${2*m*r*r/5}"
 />
</macro>

<wheel lr="left" tY="1"/>
<wheel lr="right" tY="-1"/>

<macro name="wheel" params="lr tY">

<link name="${lr}_wheel">
 <collision>
   <origin xyz="0 0 0" rpy="0 ${PI/2} ${PI/2}" />
   <geometry>
     <cylinder length="${wheelWidth}" radius="${wheelRadius}"/>
   </geometry>
 </collision>
 <visual>
   <origin xyz="0 0 0" rpy="0 ${PI/2} ${PI/2}" />
   <geometry>
     <cylinder length="${wheelWidth}" radius="${wheelRadius}"/>
   </geometry>
   <material name="black"/>
 </visual>

 <inertial>
   <origin xyz="0 0 0" rpy="0 ${PI/2} ${PI/2}" />
   <mass value="${wheelMass}"/>
   <cylinder_inertia m="${wheelMass}" r="${wheelRadius}" h="${wheelWidth}"/>
 </inertial>
</link>

<gazebo reference="${lr}_wheel">
 <mu1 value="1.0"/>
 <mu2 value="1.0"/>
 <kp  value="10000000.0" />
 <kd  value="1.0" />
 <fdir1 value="1 0 0"/>
 <material>Gazebo/Black</material>
</gazebo>


<joint name="${lr}_wheel_hinge" type="continuous">
 <parent link="chassis"/>
 <child link="${lr}_wheel"/>
<origin xyz="${-wheelPos+chassisLength/2} ${tY*wheelWidth/2+tY*chassisWidth/2} ${wheelRadius}" rpy="0 0 0" />
 <axis xyz="0 1 0" rpy="0 0 0" />
 <limit effort="100" velocity="100"/>
 <joint_properties damping="0.0" friction="0.0"/>
</joint>

<transmission name="${lr}_trans">
 <type>transmission_interface/SimpleTransmission</type>
 <joint name="${lr}_wheel_hinge">
   <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    
</joint>
<actuator name="${lr}Motor">
   <mechanicalReduction>1</mechanicalReduction>

 </actuator>
</transmission>


</macro>
<gazebo>
 <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
   <alwaysOn>true</alwaysOn>
    <legacyMode>false</legacyMode>
     
   <updateRate>10</updateRate>
   <leftJoint>left_wheel_hinge</leftJoint>
   <rightJoint>right_wheel_hinge</rightJoint>
     <wheelSeparation>${chassisWidth+wheelWidth}</wheelSeparation>
    <wheelDiameter>${2*wheelRadius}</wheelDiameter>
    <torque>20</torque>
   <commandTopic>/mybot/cmd_vel</commandTopic>
   <odometryTopic>/mybot/odom_diffdrive</odometryTopic>
   <odometryFrame>odom2</odometryFrame>
   <robotBaseFrame>footprint</robotBaseFrame>
 </plugin>
</gazebo>
<gazebo>
 <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
   <robotNamespace>/soex</robotNamespace>
 </plugin>
</gazebo>
</robot>
